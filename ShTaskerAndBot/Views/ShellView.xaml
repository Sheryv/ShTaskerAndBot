<Window x:Class="ShTaskerAndBot.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ShTaskerAndBot.Views"
        xmlns:model="clr-namespace:ShTaskerAndBot.Models"
        xmlns:u="clr-namespace:ShTaskerAndBot.Utils"
        xmlns:localVMs="clr-namespace:ShTaskerAndBot.ViewModels"
        xmlns:localModels="clr-namespace:ShTaskerAndBot.Models"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:converters="clr-namespace:ShTaskerAndBot.Converters"
        Title="{Binding Title}" Height="509.6" Width="428">
    <Window.DataContext>
        <localVMs:ShellViewModel />
    </Window.DataContext>

    <Window.Resources>
        <converters:CmdTypeToStringConverter x:Key="CmdTypeToStringConverter" />
        <converters:LoopCountConverter x:Key="LoopCountConverter" />
        <ContextMenu x:Key="CmAdd">
            <MenuItem Header="Keys combination" Command="{Binding AddKeyItemCommand}" />
            <MenuItem Header="Mouse click" Command="{Binding AddMouseItemCommand}" />
            <MenuItem Header="Defined string list" Command="{Binding AddStringListItemCommand}" />
        </ContextMenu>
    </Window.Resources>
    <Grid>
        <Menu Width="Auto" Height="20" DockPanel.Dock="Top" VerticalAlignment="Top">
            <MenuItem Header="General">
                <MenuItem Header="Limit to active window" IsCheckable="True" IsChecked="{Binding LimitToActiveWindow}" />
                <MenuItem Header="Use builtin SendWait function" IsCheckable="True"
                          IsChecked="{Binding UseBuiltinSendWait}" />
                <MenuItem Header="Reset counters for string lists" Command="{Binding ResetCountersCommand}" />
                <Separator />
                <MenuItem Header="Save" Command="ApplicationCommands.Save" />
                <MenuItem Header="Exit" Command="{Binding ExitCommand}" />
            </MenuItem>

        </Menu>

        <ListView x:Name="Items" Margin="10,86,9.4,59.6" SelectedIndex="{Binding SelectedIndex, Mode=OneWayToSource}"
                  cal:Message.Attach="[Event MouseDoubleClick] = [Action DoubleClick($eventArgs)]">
<!--                                                <ListView.DataContext>-->
<!--                                                    <model:Entry/>-->
<!--                                                </ListView.DataContext>-->
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWayToSource}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                            <Setter Property="Foreground" Value="MidnightBlue" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="Foreground" Value="Gray" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>

                <GridView>
                    <GridViewColumn Header="En" Width="28">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Content="c" Tag="{Binding Id}" IsChecked="{Binding IsEnabled}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="80" Header="Name" DisplayMemberBinding="{Binding Name}" />
                    <GridViewColumn Width="40" Header="T"
                                    DisplayMemberBinding="{Binding CmdType, Converter={StaticResource CmdTypeToStringConverter}}" />
                    <GridViewColumn Width="120" Header="Command" DisplayMemberBinding="{Binding Command}" />
                    <GridViewColumn Width="40" Header="Loop"
                                    DisplayMemberBinding="{Binding LoopCount, Converter={StaticResource LoopCountConverter}}" />
                    <GridViewColumn Width="40" Header="Interval"
                                    DisplayMemberBinding="{Binding LoopInterval, Converter={StaticResource LoopCountConverter}}" />
                    <GridViewColumn Width="40" Header="Init Delay"
                                    DisplayMemberBinding="{Binding InitialDelay, Converter={StaticResource LoopCountConverter}}" />
                    <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}" />
                </GridView>
            </ListView.View>
        </ListView>
        <TextBox x:Name="ProcessName" Height="23" Margin="59,26,142.6,0" TextWrapping="Wrap" Text="mt2"
                 VerticalAlignment="Top" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" />
        <Button x:Name="Start" Content="Start" Margin="0,0,10.4,34.6" HorizontalAlignment="Right" Width="75"
                Height="20" VerticalAlignment="Bottom" />
        <Button x:Name="Stop" Content="Stop" Margin="0,0,10.4,9.6" HorizontalAlignment="Right" Width="75"
                Height="19" VerticalAlignment="Bottom" />
        <Label x:Name="Status" Content="Status" Margin="0,25,53.6,0" VerticalAlignment="Top"
               RenderTransformOrigin="0.688,0.045" HorizontalAlignment="Right" Width="84"
               Foreground="{Binding StatusColor}" FontWeight="Bold" />
        <TextBox x:Name="IntervalValue" Height="23" Margin="59,55,300.6,0" TextWrapping="Wrap" Text="100"
                 VerticalAlignment="Top" HorizontalContentAlignment="Right"
                 cal:Message.Attach="[Event PreviewTextInput] = [Action FilterIntervalValue($eventArgs)]"
                 VerticalContentAlignment="Center" />
        <TextBox x:Name="Shortcut" Height="23" Margin="0,55,10.6,0" VerticalAlignment="Top" HorizontalAlignment="Right"
                 Width="127"
                 HorizontalContentAlignment="Right" IsReadOnly="True" Text="23"
                 VerticalContentAlignment="Center" />
        <Label Content="Process" HorizontalAlignment="Left" Margin="10,23,0,0" VerticalAlignment="Top" />
        <Label Content="Interval" HorizontalAlignment="Left" Margin="9,53,0,0" VerticalAlignment="Top" />
        <Button x:Name="btnAdd" Content="Add" Margin="10,0,0,35" VerticalAlignment="Bottom"
                HorizontalAlignment="Left" Width="75" Height="19">
            <!--                cal:Message.Attach="[Event Click] = [Action Add($this,$eventArgs)]"-->

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <cal:ActionMessage MethodName="Add">
                        <cal:Parameter Value="{Binding ElementName=btnAdd}" />
                        <cal:Parameter Value="{StaticResource CmAdd}" />
                    </cal:ActionMessage>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button x:Name="MoveUp" Content="Up" Margin="95,0,0,35" HorizontalAlignment="Left" Width="75"
                Height="19" VerticalAlignment="Bottom" />
        <Button x:Name="MoveDown" Content="Down" Margin="95,0,0,10" HorizontalAlignment="Left" Width="75"
                Height="19" VerticalAlignment="Bottom" />
        <Button x:Name="Remove" Content="Remove" Margin="10,0,0,10" HorizontalAlignment="Left" Width="75"
                Height="19" VerticalAlignment="Bottom" />
        <Label x:Name="Processing" Content="-" Margin="0,20,10.6,0" VerticalAlignment="Top"
               RenderTransformOrigin="0.508,0.177" HorizontalAlignment="Right" Width="38" FontSize="20"
               HorizontalContentAlignment="Right" Height="31" Background="{x:Null}" Foreground="#FFD60000"
               Padding="5,2,5,0" />
        <Label Content="ms" Margin="0,51,270.6,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="30" />
        <CheckBox x:Name="GlobalShortcutEnabled" Content="On" Margin="0,59,137.6,0" VerticalAlignment="Top"
                  HorizontalAlignment="Right" Width="45" />
        <Button x:Name="ShortcutChange" Content="Shortcut" Margin="0,55,190.6,0" VerticalAlignment="Top"
                Height="23" HorizontalAlignment="Right" Width="75" />
        <Button x:Name="Edit" Content="Edit" Margin="180,0,0,35" HorizontalAlignment="Left" Width="75"
                Height="19" VerticalAlignment="Bottom" />
        <Button x:Name="ShowDetails" Content="Details" Margin="180,0,0,10" HorizontalAlignment="Left" Width="75"
                Height="19" VerticalAlignment="Bottom" />
    </Grid>
</Window>